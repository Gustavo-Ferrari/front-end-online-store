{"version":3,"sources":["components/Input.jsx","services/api.js","components/CategoriesSidebar.jsx","components/Card.jsx","components/CardList.jsx","components/IconHome.jsx","components/Header.jsx","pages/Home.jsx","components/CardCarrinho.jsx","components/Evaluation.jsx","components/EvaluationZone.jsx","components/EvaluatingForm.jsx","pages/ProductDetails.jsx","components/FinishingForm.jsx","components/PurchaseItem.jsx","pages/FinishingProduct.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","this","props","labelId","inputId","labelText","name","type","onChange","onKeyDown","onClick","classInput","classLabel","id","className","data-testid","htmlFor","placeholder","Component","defaultProps","getCategories","a","fetch","categoriesResponse","json","responseJson","getProductsFromCategoryAndQuery","categoryId","query","END_POINT","productsQuery","productResponse","fetchItem","productId","Error","url","response","results","CategoriesSidebar","componentDidMount","updateAppState","categoriesArray","onRadioButtonClick","handleClick","map","category","key","Card","dataId","productName","src","price","imageId","onAddProduct","isAddDisabled","freeShipping","to","alt","disabled","React","CardList","searchResults","result","title","thumbnail","shipping","free_shipping","IconHome","Header","cartItems","JSON","parse","localStorage","getItem","sum","forEach","element","cartQuantity","getCartQuantity","Home","searchInput","handleChange","handleOnKeyDown","handleAddProduct","value","CardCarrinho","addtoCartItem","product","isAddButtonDisabled","indexOfFoundItem","findIndex","cartItem","foundItem","totalPrice","setItem","stringify","removeFromCartItem","filter","cartNumberOfItems","length","item","toFixed","Evaluation","state","index","isRadioSelected","rating","e","push","setState","user","comment","checked","EvaluationZone","arrayOfEvaluation","match","params","filterEvaluation","evaluation","EvaluatingForm","handleRadioClick","target","selectedRadioButton","onEvaluationClic","getEvaluation","bind","ratingArray","onSubmit","handleSubmit","ProductDetails","currentProductDetailed","attributes","toLocaleString","attName","valueName","value_name","FinishingForm","email","cpf","phone","postalCode","address","required","PurchaseItem","amount","FinishingProduct","purchaseFinished","handlePrice","reduce","acc","current","App","entries","callbackFunction","queryResponse","indexOfCartItem","cartListItem","availability","checkAvalabilityOfResults","indexOfResultsItem","resultItem","foundResult","available_quantity","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c04d9b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const {\n      labelId,\n      inputId,\n      labelText,\n      name,\n      type,\n      onChange,\n      onKeyDown,\n      onClick,\n      classInput,\n      classLabel,\n      id } = this.props;\n    return (\n      <label className={ classLabel } data-testid={ labelId } htmlFor={ id }>\n        <span>{labelText}</span>\n        <input\n          placeholder=\"Bucar produtos, marcas e muito mais...\"\n          className={ classInput }\n          data-testid={ inputId }\n          type={ type }\n          name={ name }\n          id={ id }\n          onChange={ onChange }\n          onKeyDown={ onKeyDown }\n          onClick={ onClick }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  labelId: PropTypes.string,\n  classInput: PropTypes.string.isRequired,\n  classLabel: PropTypes.string.isRequired,\n  inputId: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nInput.defaultProps = {\n  labelId: '',\n  inputId: '',\n  onChange: () => {},\n  onKeyDown: () => {},\n  onClick: () => {},\n  id: '',\n};\n\nexport default Input;\n","export async function getCategories() {\n  const END_POINT = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const categoriesResponse = await fetch(END_POINT);\n  const responseJson = await categoriesResponse.json();\n  return responseJson;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const END_POINT = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const productsQuery = await fetch(END_POINT);\n  const productResponse = await productsQuery.json();\n  return productResponse;\n}\n\nexport async function fetchItem(productId) {\n  if (!productId) {\n    return new Error('You must provide an url');\n  }\n  const url = `https://api.mercadolibre.com/items/${productId}`;\n  const response = await fetch(url);\n  const results = await response.json();\n  return results;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\nimport Input from './Input';\nimport '../Styles/allProducts.css';\n\nclass CategoriesSidebar extends Component {\n  componentDidMount = async () => {\n    const { updateAppState } = this.props;\n    const categoriesArray = await getCategories();\n    updateAppState({ categoriesArray });\n  }\n\n  onRadioButtonClick = (categoryId) => {\n    const { updateAppState, handleClick } = this.props;\n    updateAppState({ categoryId }, handleClick);\n  }\n\n  render() {\n    const { categoriesArray } = this.props;\n    return (\n      <div className=\"sideCard\">\n        <p>CategoriesSidebar</p>\n        <ul>\n          { categoriesArray.map((category) => (\n            <li key={ category.id }>\n              <Input\n                classInput=\"sidebarInput\"\n                classLabel=\"sidebarLabel\"\n                type=\"radio\"\n                name=\"item-categoria\"\n                id={ category.id }\n                labelText={ category.name }\n                labelId=\"category\"\n                onChange={ () => this.onRadioButtonClick(category.id) }\n              />\n            </li>))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nCategoriesSidebar.propTypes = {\n  updateAppState: PropTypes.func.isRequired,\n  categoriesArray: PropTypes.arrayOf(PropTypes.object),\n  handleClick: PropTypes.func.isRequired,\n};\n\nCategoriesSidebar.defaultProps = {\n  categoriesArray: [],\n};\n\nexport default CategoriesSidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      dataId,\n      productName,\n      src,\n      price,\n      productId,\n      imageId,\n      onAddProduct,\n      isAddDisabled,\n      freeShipping,\n    } = this.props;\n\n    return (\n      <div className=\"products\">\n        <Link to={ `/product-details/${productId}` }>\n          <div data-testid={ dataId }>\n            <img\n              data-testid={ imageId }\n              src={ src }\n              alt={ `Imagem do produto: ${productName}` }\n            />\n            <h2>\n              { productName }\n            </h2>\n            <p className=\"p\">\n              { `Preço: RS$ ${price}` }\n            </p>\n          </div>\n        </Link>\n        {freeShipping && <p data-testid=\"free-shipping\">Frete Grátis</p>}\n        <button\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          onClick={ onAddProduct }\n          disabled={ isAddDisabled }\n        >\n          Adicionar ao carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  dataId: PropTypes.string.isRequired,\n  productName: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  productId: PropTypes.string.isRequired,\n  imageId: PropTypes.string.isRequired,\n  onAddProduct: PropTypes.func.isRequired,\n  isAddDisabled: PropTypes.bool.isRequired,\n  freeShipping: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\n\nclass CardList extends Component {\n  render() {\n    const { searchResults, onAddProduct } = this.props;\n    return (\n      <div>\n        <p>Product List</p>\n        { searchResults.map((result) => (\n          <Card\n            key={ result.id }\n            dataId=\"product\"\n            productName={ result.title }\n            imageId=\"product-detail-link\"\n            price={ result.price }\n            src={ result.thumbnail }\n            productId={ result.id }\n            onAddProduct={ () => onAddProduct(result) }\n            isAddDisabled={ result.isAddDisabled }\n            freeShipping={ result.shipping.free_shipping }\n          />))}\n      </div>\n    );\n  }\n}\n\nCardList.propTypes = {\n  searchResults: PropTypes.arrayOf(PropTypes.object),\n  onAddProduct: PropTypes.func.isRequired,\n};\n\nCardList.defaultProps = {\n  searchResults: [],\n};\n\nexport default CardList;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Styles/Header.css';\nimport { AiOutlineHome } from 'react-icons/ai';\n\nclass IconHome extends Component {\n  render() {\n    return (\n      <Link to=\"/\" className=\"homeIcon\">\n        <AiOutlineHome />\n      </Link>\n    );\n  }\n}\n\nexport default IconHome;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\nimport IconHome from './IconHome';\n\nclass Header extends Component {\n  getCartQuantity() {\n    const cartItems = JSON.parse(localStorage.getItem('cartItems') ?? '[]');\n\n    let sum = 0;\n    cartItems.forEach((element) => {\n      sum += element.cartQuantity;\n    });\n\n    return sum;\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <IconHome />\n        <h1> Front-End Online Store </h1>\n        <Link to=\"/CardCarrinho\" className=\"cartIcon\" data-testid=\"shopping-cart-button\">\n          <AiOutlineShoppingCart />\n          <span data-testid=\"shopping-cart-size\">{this.getCartQuantity()}</span>\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { AiOutlineShoppingCart } from 'react-icons/ai';\nimport Input from '../components/Input';\nimport CategoriesSidebar from '../components/CategoriesSidebar';\nimport CardList from '../components/CardList';\nimport Header from '../components/Header';\nimport '../Styles/Header.css';\nimport '../Styles/allProducts.css';\nimport '../Styles/Home.css';\n\nclass Home extends Component {\n  render() {\n    const {\n      searchInput,\n      handleChange,\n      handleClick,\n      handleOnKeyDown,\n      handleAddProduct,\n    } = this.props;\n\n    return (\n      <div className=\"body\">\n        <Header />\n        <div className=\"search\">\n          <Input\n            classInput=\"searchInput\"\n            classLabel=\"searchLabel\"\n            type=\"text\"\n            labelId=\"home-initial-message\"\n            inputId=\"query-input\"\n            labelText=\"Digite algum termo de pesquisa ou escolha uma categoria.\"\n            value={ searchInput }\n            name=\"searchInput\"\n            onChange={ handleChange }\n            onKeyDown={ handleOnKeyDown }\n          />\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ handleClick }\n          >\n            Pesquisar\n          </button>\n        </div>\n        <div className=\"allProducts\">\n          <section className=\"sideBar\">\n            <CategoriesSidebar { ...this.props } />\n          </section>\n          <section className=\"productsList\">\n            <CardList { ...this.props } onAddProduct={ handleAddProduct } />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\nHome.propTypes = {\n  searchInput: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleOnKeyDown: PropTypes.func.isRequired,\n  handleAddProduct: PropTypes.func.isRequired,\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nHome.defaultProps = {\n  searchInput: '',\n};\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport '../Styles/cardCarrinho.css';\n\nexport default class CardCarrinho extends Component {\n  getCartQuantity() {\n    const { cartItems } = this.props;\n    let sum = 0;\n    cartItems.forEach((element) => {\n      sum += element.cartQuantity;\n    });\n    return sum;\n  }\n\n  addtoCartItem= (product) => {\n    const { cartItems, updateAppState, isAddButtonDisabled } = this.props;\n    const indexOfFoundItem = cartItems\n      .findIndex((cartItem) => cartItem.id === product.id);\n    const foundItem = cartItems[indexOfFoundItem];\n    foundItem.cartQuantity += 1;\n    foundItem.totalPrice += foundItem.price;\n    foundItem.isAddDisabled = isAddButtonDisabled(product);\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    updateAppState({ cartItems });\n  }\n\n  removeFromCartItem = (product) => {\n    const { cartItems, updateAppState, isAddButtonDisabled } = this.props;\n    const indexOfFoundItem = cartItems\n      .findIndex((cartItem) => cartItem.id === product.id);\n    const foundItem = cartItems[indexOfFoundItem];\n    foundItem.cartQuantity -= 1;\n    foundItem.totalPrice -= foundItem.price;\n    foundItem.isAddDisabled = isAddButtonDisabled(product);\n    if (foundItem.cartQuantity <= 0) {\n      const cartWithoutProduct = cartItems\n        .filter((cartItem) => cartItem.id !== product.id);\n      updateAppState({ cartItems: cartWithoutProduct });\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return;\n    }\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    updateAppState({ cartItems });\n  }\n\n  render() {\n    const { cartItems } = this.props;\n    return (\n      <div className=\"cart-body\">\n        <Header cartNumberOfItems={ this.getCartQuantity() } />\n        <div className=\"cart\">\n          {\n            cartItems.length > 0\n              ? (cartItems.map((item) => (\n                <div className=\"cart-item\" key={ item.id }>\n                  <img alt={ item.name } src={ item.thumbnail } />\n                  <p data-testid=\"shopping-cart-product-name\">{item.title}</p>\n                  <p data-testid=\"shopping-cart-product-quantity\">\n                    {`Quantidade: ${item.cartQuantity}`}\n                  </p>\n                  <p>{`Total: R$ ${(item.totalPrice).toFixed(2)}`}</p>\n                  <button\n                    className=\"addButton\"\n                    data-testid=\"product-decrease-quantity\"\n                    type=\"button\"\n                    onClick={ () => this.removeFromCartItem(item) }\n                  >\n                    -\n                  </button>\n                  <button\n                    className=\"addButton\"\n                    data-testid=\"product-increase-quantity\"\n                    type=\"button\"\n                    onClick={ () => this.addtoCartItem(item) }\n                    disabled={ item.isAddDisabled }\n                  >\n                    +\n                  </button>\n                </div>\n              )))\n              : <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n          }\n        </div>\n        <section>\n          {cartItems.length > 0\n          && (\n            <div className=\"cartLink\">\n              <Link\n                className=\"link\"\n                data-testid=\"checkout-products\"\n                to=\"/checkout\"\n              >\n                <p>Comprar</p>\n              </Link>\n            </div>)}\n        </section>\n      </div>\n    );\n  }\n}\nCardCarrinho.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  updateAppState: PropTypes.func.isRequired,\n  isAddButtonDisabled: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Evaluation extends React.Component {\n  state = {\n    index: [],\n  }\n\n  isRadioSelected = (value) => {\n    const { rating } = this.props;\n    return rating === value;\n  };\n\n  ratingArray() {\n    const MAX_RATING = 5;\n    const index = [];\n    for (let e = 1; e <= MAX_RATING; e += 1) {\n      index.push(e);\n    }\n    this.setState({ index });\n  }\n\n  render() {\n    const { user, comment } = this.props;\n    const { index } = this.state;\n\n    return (\n      <div>\n        <div>\n          <p className=\"email\">{ user }</p>\n          {\n            index.map((e) => (\n              <label htmlFor={ `radio${e}` } key={ e }>\n                { e }\n                <input\n                  id={ `radio${e}` }\n                  type=\"radio\"\n                  name={ `${e}-rating` }\n                  value={ e }\n                  checked={ this.isRadioSelected(e) }\n                  disabled\n                />\n              </label>\n            ))\n          }\n        </div>\n        <p>{ comment }</p>\n      </div>\n    );\n  }\n}\n\nEvaluation.propTypes = {\n  user: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default Evaluation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Evaluation from './Evaluation';\n\nclass EvaluationZone extends React.Component {\n  render() {\n    const { arrayOfEvaluation, match: { params: { id } } } = this.props;\n    const filterEvaluation = arrayOfEvaluation\n      .filter((evaluation) => evaluation.id === id);\n    return (\n      <div>\n        {filterEvaluation.map((evaluation, index) => (\n          <Evaluation\n            key={ index }\n            user={ evaluation.user }\n            rating={ evaluation.rating }\n            comment={ evaluation.comment }\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nEvaluationZone.propTypes = {\n  arrayOfEvaluation: PropTypes.arrayOf(PropTypes.object),\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\nEvaluationZone.defaultProps = {\n  arrayOfEvaluation: [],\n};\n\nexport default EvaluationZone;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EvaluationZone from './EvaluationZone';\n\nexport default class EvaluatingForm extends Component {\n  constructor() {\n    super();\n    this.state = { // estado inicial\n      user: '',\n      comment: '',\n      disabled: true,\n      selectedRadioButton: null,\n      index: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEvaluation();\n    this.ratingArray();\n  }\n\n  componentDidUpdate() {\n    const { disabled, selectedRadioButton } = this.state;\n    if (selectedRadioButton && disabled) {\n      this.setState({ disabled: false });\n    } else if (!selectedRadioButton && !disabled) {\n      this.setState({ disabled: true });\n    }\n  }\n\n  handleChange({ target: { value, name } }) { // Mudando o estado apenas com 3 caracteres obrigatório pro email\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleRadioClick = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'radio' ? +target.value : target.value;\n    this.setState({ [name]: value });\n  }\n\n  getEvaluation() {\n    const arrayOfEvaluation = JSON.parse(localStorage.getItem('evaluations'));\n    if (arrayOfEvaluation) {\n      this.setState({ arrayOfEvaluation });\n    }\n  }\n\n  isRadioSelected = (value) => {\n    const { selectedRadioButton } = this.state;\n    return selectedRadioButton === value;\n  }\n\n  onEvaluationClic = () => {\n    const { user, comment, selectedRadioButton: rating } = this.state;\n    const { match: { params: { id } } } = this.props;\n    const arrayOfEvaluation = JSON.parse(localStorage.getItem('evaluations'));\n    const evaluation = { user, comment, id, rating };\n\n    if (arrayOfEvaluation) {\n      arrayOfEvaluation.push(evaluation);\n      localStorage.setItem('evaluations', JSON.stringify(arrayOfEvaluation));\n    } else {\n      localStorage.setItem('evaluations', JSON.stringify([evaluation]));\n    }\n    this.setState({\n      user: '',\n      comment: '',\n      selectedRadioButton: null,\n    });\n    this.getEvaluation();\n  }\n\n  ratingArray() {\n    const MAX_RATING = 5;\n    const index = [];\n    for (let e = 1; e <= MAX_RATING; e += 1) {\n      index.push(e);\n    }\n    this.setState({ index });\n  }\n\n  render() {\n    const { user, comment, index, disabled } = this.state;\n    return (\n      <div>\n        <h1>Avaliações</h1>\n        <form onSubmit={ this.handleSubmit }>\n          <div>\n            {\n              index.map((e) => (\n                <label htmlFor={ `radio${e}` } key={ e }>\n                  { e }\n                  <input\n                    id={ `radio${e}` }\n                    type=\"radio\"\n                    data-testid={ `${e}-rating` }\n                    name=\"selectedRadioButton\"\n                    value={ e }\n                    checked={ this.isRadioSelected(e) }\n                    onChange={ this.handleRadioClick }\n                  />\n                </label>\n              ))\n            }\n          </div>\n          <div>\n            <input\n              id=\"user\"\n              name=\"user\"\n              value={ user }\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={ this.handleChange }\n              data-testid=\"product-detail-email\"\n            />\n          </div>\n          <div>\n            <textarea\n              id=\"comment\"\n              name=\"comment\"\n              value={ comment }\n              data-testid=\"product-detail-evaluation\"\n              placeholder=\"Comentários\"\n              onChange={ this.handleChange }\n            />\n          </div>\n          <button\n            data-testid=\"submit-review-btn\"\n            type=\"button\"\n            disabled={ disabled }\n            onClick={ this.onEvaluationClic }\n          >\n            AVALIA\n          </button>\n        </form>\n        <EvaluationZone { ...this.state } { ...this.props } />\n      </div>\n    );\n  }\n}\nEvaluatingForm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { fetchItem } from '../services/api';\nimport Header from '../components/Header';\nimport EvaluatingForm from '../components/EvaluatingForm';\nimport '../Styles/ProductDetails.css';\n\nclass ProductDetails extends Component {\n  componentDidMount = async () => {\n    const { match: { params: { id } }, updateAppState } = this.props;\n    const currentProductDetailed = await fetchItem(id);\n    updateAppState({ currentProductDetailed });\n  }\n\n  render() {\n    const { currentProductDetailed, handleAddProduct } = this.props;\n    const { title, thumbnail, price, attributes } = currentProductDetailed;\n\n    return (\n      <div className=\"body\">\n        <Header />\n        <section className=\"details\">\n          <h1 data-testid=\"product-detail-name\">\n            {title}\n          </h1>\n          <img src={ thumbnail } alt={ `Imagem do produto ${title}` } />\n          <p>\n            Preço:\n            {`R$ ${price.toLocaleString('pt-br')}` }\n          </p>\n          <button\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ () => handleAddProduct(currentProductDetailed) }\n          >\n            Adicionar ao carrinho\n          </button>\n        </section>\n        <div className=\"evaluation\">\n          <EvaluatingForm { ...this.props } />\n        </div>\n        <h2>Especificações Técnicas</h2>\n        <div className=\"specifications\">\n          {attributes.map(({ name: attName, id, value_name: valueName }) => (\n            <p\n              key={ id }\n            >\n              {`${attName}: `}\n              <span>\n                { valueName}\n              </span>\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  currentProductDetailed: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    attributes: PropTypes.arrayOf(PropTypes.object),\n  }),\n  match: PropTypes.instanceOf(Route).isRequired,\n  updateAppState: PropTypes.func.isRequired,\n  handleAddProduct: PropTypes.func.isRequired,\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nProductDetails.defaultProps = {\n  currentProductDetailed: {\n    title: '',\n    price: '',\n    attributes: [],\n  },\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass FinishingForm extends React.Component {\n  render() {\n    const {\n      name,\n      email,\n      cpf,\n      phone,\n      postalCode,\n      address,\n      onClick,\n      onChange,\n    } = this.props;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"name\">\n            <p>Nome Completo:</p>\n            <input\n              required\n              name=\"name\"\n              type=\"text\"\n              data-testid=\"checkout-fullname\"\n              onChange={ onChange }\n              value={ name }\n            />\n          </label>\n          <label htmlFor=\"email\">\n            <p>E-mail:</p>\n            <input\n              required\n              name=\"email\"\n              type=\"email\"\n              data-testid=\"checkout-email\"\n              onChange={ onChange }\n              value={ email }\n            />\n          </label>\n          <label htmlFor=\"cpf\">\n            <p>CPF:</p>\n            <input\n              required\n              name=\"cpf\"\n              type=\"text\"\n              data-testid=\"checkout-cpf\"\n              placeholder=\"xxx.xxx.xxx-xx\"\n              onChange={ onChange }\n              value={ cpf }\n            />\n          </label>\n          <label htmlFor=\"phone\">\n            <p>Telefone:</p>\n            <input\n              required\n              name=\"phone\"\n              type=\"text\"\n              data-testid=\"checkout-phone\"\n              onChange={ onChange }\n              value={ phone }\n            />\n          </label>\n          <label htmlFor=\"postalCode\">\n            <p>CEP:</p>\n            <input\n              required\n              name=\"postalCode\"\n              type=\"text\"\n              data-testid=\"checkout-cep\"\n              onChange={ onChange }\n              value={ postalCode }\n            />\n          </label>\n          <label htmlFor=\"address\">\n            <p>Endereço:</p>\n            <input\n              required\n              name=\"address\"\n              type=\"text\"\n              data-testid=\"checkout-address\"\n              onChange={ onChange }\n              value={ address }\n            />\n          </label>\n          <br />\n          <button\n            className=\"form-button\"\n            type=\"submit\"\n            onClick={ onClick }\n          >\n            Finalizar Compra\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nFinishingForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  cpf: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  postalCode: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FinishingForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass PurchaseItem extends React.Component {\n  render() {\n    // const { price, imageId, productName } = this.props; // PUXEI DO CARD, MAS N SEI SE É ISSO MESMO - VOU COMENTRA E CRIAR UM NOVO\n    // SE N FOR SUBSTITUIR COMO TÁ EMBAIXO\n    const { amount, price, thumbnail, title } = this.props;\n    return (\n      <div className=\"item\">\n        <img src={ thumbnail } alt={ title } />\n        <div>\n          <p>\n            <strong>Nome do Produto: </strong>\n            { title }\n          </p>\n          <p>\n            <strong>Quantidade: </strong>\n            { amount }\n          </p>\n          <p>\n            <strong>Preço: RS$ </strong>\n            { price }\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nPurchaseItem.propTypes = {\n  price: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n};\n\nexport default PurchaseItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport FinishingForm from '../components/FinishingForm';\nimport PurchaseItem from '../components/PurchaseItem';\nimport Header from '../components/Header';\nimport '../Styles/FinishingProduct.css';\n// FIZ O ESQUELETO - FALTA CONECTAR COM AS OUTRAS PARTES DA PÁGINA\nclass FinishingProduct extends React.Component {\n    state = {\n      totalPrice: 0,\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      postalCode: '',\n      address: '',\n      purchaseFinished: false,\n    };\n\n    componentDidMount() {\n      this.handlePrice();\n    }\n\n  handlePrice = () => {\n    const { cartItems } = this.props;\n    const totalPrice = cartItems.map((item) => item.totalPrice)\n      .reduce((acc, current) => acc + current);\n    this.setState({ totalPrice });\n  }\n\n  handleClick = () => {\n    this.setState({\n      // items: [],\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      postalCode: '',\n      address: '',\n      purchaseFinished: true,\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { cartItems } = this.props;\n    const { totalPrice } = this.state;\n    const { name, email, cpf, phone, postalCode, address, purchaseFinished } = this.state;\n    return (\n      <div className=\"body\">\n        <Header />\n        {purchaseFinished && <Redirect to=\"/\" /> }\n        <div>\n          <div className=\"item-container\">\n            {cartItems.map((item) => (\n              <PurchaseItem\n                key={ item.id }\n                title={ item.title }\n                price={ (item.totalPrice).toFixed(2) }\n                amount={ item.cartQuantity }\n                thumbnail={ item.thumbnail }\n              />\n            ))}\n          </div>\n          <section className=\"form\">\n            <p>{`Total a pagar: ${(totalPrice).toFixed(2)}`}</p>\n            <FinishingForm\n              name={ name }\n              email={ email }\n              cpf={ cpf }\n              phone={ phone }\n              postalCode={ postalCode }\n              address={ address }\n              onClick={ this.handleClick }\n              onChange={ this.handleChange }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nFinishingProduct.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.object),\n};\nFinishingProduct.defaultProps = {\n  cartItems: [],\n};\n\nexport default FinishingProduct;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport CardCarrinho from './components/CardCarrinho';\nimport { getProductsFromCategoryAndQuery } from './services/api';\nimport ProductDetails from './pages/ProductDetails';\nimport FinishingProduct from './pages/FinishingProduct';\n\nclass App extends React.Component {\n  state = {\n    searchInput: '',\n    cartItems: JSON.parse((localStorage.getItem('cartItems') ?? '[]')),\n  }\n\n  updateAppState = (entries, callbackFunction) => {\n    this.setState({ ...entries }, callbackFunction);\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleClick = async () => {\n    const { searchInput, categoryId } = this.state;\n    const queryResponse = await getProductsFromCategoryAndQuery(categoryId, searchInput);\n    const searchResults = queryResponse.results;\n    searchResults.forEach((result) => { result.isAddDisabled = false; });\n    this.setState({ searchResults });\n  }\n\n  handleOnKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.handleClick();\n    }\n  }\n\n  handleAddProduct = (product) => {\n    const { cartItems } = this.state;\n\n    const indexOfCartItem = cartItems\n      .findIndex((cartListItem) => cartListItem.id === product.id);\n\n    if (indexOfCartItem >= 0) {\n      const foundItem = cartItems[indexOfCartItem];\n      foundItem.cartQuantity += 1;\n      foundItem.totalPrice += foundItem.price;\n      foundItem.availability = this.isAddButtonDisabled(product);\n      this.setState({ cartItems });\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return;\n    }\n    product.cartQuantity = 1;\n    product.availability = this.isAddButtonDisabled(product);\n    product.totalPrice = product.price;\n    this.checkAvalabilityOfResults(product);\n    this.setState({ cartItems: [...cartItems, product] });\n    localStorage.setItem('cartItems', JSON.stringify([...cartItems, product]));\n  }\n\n  checkAvalabilityOfResults = (product) => {\n    const { searchResults } = this.state;\n    const indexOfResultsItem = searchResults\n      .findIndex((resultItem) => resultItem.id === product.id);\n    const foundResult = searchResults[indexOfResultsItem];\n    foundResult.isAddDisabled = this.isAddButtonDisabled(foundResult);\n    this.setState({ searchResults });\n  }\n\n  isAddButtonDisabled = ({ cartQuantity, available_quantity: availableQuantity }) => {\n    if (cartQuantity === availableQuantity) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { cartItems } = this.state;\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={ () => (\n              <Home\n                { ...this.state }\n                handleChange={ this.handleChange }\n                updateAppState={ this.updateAppState }\n                handleClick={ this.handleClick }\n                handleOnKeyDown={ this.handleOnKeyDown }\n                handleAddProduct={ this.handleAddProduct }\n              />) }\n          />\n          <Route\n            exact\n            path=\"/CardCarrinho\"\n            component={ () => (\n              <CardCarrinho\n                cartItems={ cartItems }\n                updateAppState={ this.updateAppState }\n                isAddButtonDisabled={ this.isAddButtonDisabled }\n              />) }\n          />\n          <Route\n            path=\"/product-details/:id\"\n            render={ (props) => (\n              <ProductDetails\n                { ...props }\n                { ...this.state }\n                updateAppState={ this.updateAppState }\n                handleAddProduct={ this.handleAddProduct }\n              />) }\n          />\n          <Route\n            path=\"/checkout\"\n            render={ () => (<FinishingProduct { ...this.state } />) }\n          />\n        </Switch>\n      </BrowserRouter>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}